---
import Layout from '../../layouts/Layout.astro'
---

<Layout title="Javascript 01 - Drum Kit">
  <main>
    <div class="keys">
      <div data-key="a" class="key">
        <kbd>A</kbd>
        <span class="sound">clap</span>
      </div>
      <div data-key="s" class="key">
        <kbd>S</kbd>
        <span class="sound">hihat</span>
      </div>
      <div data-key="d" class="key">
        <kbd>D</kbd>
        <span class="sound">kick</span>
      </div>
      <div data-key="f" class="key">
        <kbd>F</kbd>
        <span class="sound">openhat</span>
      </div>
      <div data-key="g" class="key">
        <kbd>G</kbd>
        <span class="sound">boom</span>
      </div>
      <div data-key="h" class="key">
        <kbd>H</kbd>
        <span class="sound">ride</span>
      </div>
      <div data-key="j" class="key">
        <kbd>J</kbd>
        <span class="sound">snare</span>
      </div>
      <div data-key="k" class="key">
        <kbd>K</kbd>
        <span class="sound">tom</span>
      </div>
      <div data-key="l" class="key">
        <kbd>L</kbd>
        <span class="sound">tink</span>
      </div>
    </div>

    <audio data-key="a" src="src/assets/sounds/clap.wav"></audio>
    <audio data-key="s" src="src/assets/sounds/hihat.wav"></audio>
    <audio data-key="d" src="src/assets/sounds/kick.wav"></audio>
    <audio data-key="f" src="src/assets/sounds/openhat.wav"></audio>
    <audio data-key="g" src="src/assets/sounds/boom.wav"></audio>
    <audio data-key="h" src="src/assets/sounds/ride.wav"></audio>
    <audio data-key="j" src="src/assets/sounds/snare.wav"></audio>
    <audio data-key="k" src="src/assets/sounds/tom.wav"></audio>
    <audio data-key="l" src="src/assets/sounds/tink.wav"></audio>
  </main>
</Layout>

<script>
  function removeTransition(event: TransitionEvent) {
    if (event.propertyName !== 'transform') return

    const targetElement = event.target as HTMLElement

    if (!targetElement) return

    targetElement.classList.remove('playing')
  }

  function playSound(event: KeyboardEvent) {
    const eventKey = event.key.toLowerCase();
    const key = document.querySelector<HTMLDivElement>(
      `div[data-key="${eventKey}"]`,
    )
    const audio = document.querySelector<HTMLAudioElement>(
      `audio[data-key="${eventKey}"]`,
    )

    if (!audio) return

    key?.classList.add('playing')
    audio.currentTime = 0
    audio.play()
  }

  const keys = document.querySelectorAll('.key')

  // @ts-ignore
  keys.forEach(key => key.addEventListener('transitionend', removeTransition))
  window.addEventListener('keydown', playSound)
</script>

<style>
  html {
    font-size: 10px;
    background: url('src/assets/images/javascript-01-background.jpg') bottom
      center;
    background-size: cover;
  }

  body,
  html {
    margin: 0;
    padding: 0;
    font-family: sans-serif;
  }

  .keys {
    display: flex;
    flex: 1;
    min-height: 100vh;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    align-content: center;
  }

  .key {
    border: 0.4rem solid black;
    border-radius: 0.5rem;
    margin: 1rem;
    font-size: 1.5rem;
    padding: 1rem 0.5rem;
    transition: all 0.07s ease;
    width: 10rem;
    text-align: center;
    color: white;
    background: rgba(0, 0, 0, 0.4);
    text-shadow: 0 0 0.5rem black;
  }

  .playing {
    transform: scale(1.1);
    border-color: #ffc600;
    box-shadow: 0 0 1rem #ffc600;
  }

  kbd {
    display: block;
    font-size: 4rem;
  }

  .sound {
    font-size: 1.2rem;
    text-transform: uppercase;
    letter-spacing: 0.1rem;
    color: #ffc600;
  }
</style>
